/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TransactionsRouteImport } from './routes/transactions'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AllocationsRouteImport } from './routes/allocations'
import { Route as AccountsRouteImport } from './routes/accounts'
import { Route as IndexRouteImport } from './routes/index'

const TransactionsRoute = TransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AllocationsRoute = AllocationsRouteImport.update({
  id: '/allocations',
  path: '/allocations',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsRoute = AccountsRouteImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/allocations': typeof AllocationsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/transactions': typeof TransactionsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/allocations': typeof AllocationsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/transactions': typeof TransactionsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/allocations': typeof AllocationsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/transactions': typeof TransactionsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/accounts'
    | '/allocations'
    | '/login'
    | '/register'
    | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/accounts'
    | '/allocations'
    | '/login'
    | '/register'
    | '/transactions'
  id:
    | '__root__'
    | '/'
    | '/accounts'
    | '/allocations'
    | '/login'
    | '/register'
    | '/transactions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountsRoute: typeof AccountsRoute
  AllocationsRoute: typeof AllocationsRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  TransactionsRoute: typeof TransactionsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/transactions': {
      id: '/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/allocations': {
      id: '/allocations'
      path: '/allocations'
      fullPath: '/allocations'
      preLoaderRoute: typeof AllocationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts': {
      id: '/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof AccountsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountsRoute: AccountsRoute,
  AllocationsRoute: AllocationsRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  TransactionsRoute: TransactionsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
